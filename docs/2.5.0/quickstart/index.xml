<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick Start on WebLogic Kubernetes Operator</title>
    <link>/weblogic-kubernetes-operator/quickstart/</link>
    <description>Recent content in Quick Start on WebLogic Kubernetes Operator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Feb 2019 15:27:38 -0500</lastBuildDate>
    
	<atom:link href="/weblogic-kubernetes-operator/quickstart/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>/weblogic-kubernetes-operator/quickstart/introduction/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/introduction/</guid>
      <description>Use this Quick Start guide to create a WebLogic deployment in a Kubernetes cluster with the Oracle WebLogic Server Kubernetes Operator. Please note that this walk-through is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, please refer to the User guide.
All Kubernetes distributions and managed services have small differences. In particular, the way that persistent storage and load balancers are managed varies significantly.</description>
    </item>
    
    <item>
      <title>Before you begin</title>
      <link>/weblogic-kubernetes-operator/quickstart/prerequisites/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/prerequisites/</guid>
      <description>For this exercise, youâ€™ll need a Kubernetes cluster. If you need help setting one up, check out our cheat sheet. This guide assumes a single node cluster.
The operator uses Helm to create and deploy the necessary resources and then run the operator in a Kubernetes cluster. For Helm installation and usage information, see Install Helm and Tiller.
You should clone this repository to your local machine so that you have access to the various sample files mentioned throughout this guide:</description>
    </item>
    
    <item>
      <title>Get images</title>
      <link>/weblogic-kubernetes-operator/quickstart/get-images/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/get-images/</guid>
      <description>Get these images and put them into your local registry.   If you don&amp;rsquo;t already have one, obtain a Docker store account, log in to the Docker store, and accept the license agreement for the WebLogic Server image.
  Log in to the Docker store from your Docker client:
$ docker login   Pull the operator image:
$ docker pull oracle/weblogic-kubernetes-operator:2.5.0  If you are here because you are following the Model In Image sample, change the image to oracle/weblogic-kubernetes-operator:3.</description>
    </item>
    
    <item>
      <title>Install the operator and load balancer</title>
      <link>/weblogic-kubernetes-operator/quickstart/install/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/install/</guid>
      <description>Grant the Helm service account the cluster-admin role. $ cat &amp;lt;&amp;lt;EOF | kubectl apply -f - apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: helm-user-cluster-admin-role roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: default namespace: kube-system EOF Use Helm to install the operator and Traefik load balancer. First, set up Helm:
$ helm repo add stable https://kubernetes-charts.storage.googleapis.com/ Create a Traefik (ingress-based) load balancer. Create a namespace for the load balancer.</description>
    </item>
    
    <item>
      <title>Prepare for a domain</title>
      <link>/weblogic-kubernetes-operator/quickstart/prepare/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/prepare/</guid>
      <description>Create a namespace that can host one or more domains:
$ kubectl create namespace sample-domain1-ns   Use helm to configure the operator to manage domains in this namespace:
$ helm upgrade sample-weblogic-operator kubernetes/charts/weblogic-operator \  --namespace sample-weblogic-operator-ns \  --reuse-values \  --set &amp;#34;domainNamespaces={sample-domain1-ns}&amp;#34; \  --wait   Configure Traefik to manage ingresses created in this namespace:
$ helm upgrade traefik-operator stable/traefik \  --namespace traefik \  --reuse-values \  --set &amp;#34;kubernetes.</description>
    </item>
    
    <item>
      <title>Create a domain</title>
      <link>/weblogic-kubernetes-operator/quickstart/create-domain/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/create-domain/</guid>
      <description>For use in the following steps:
 Select a user name and password, following the required rules for password creation (at least 8 alphanumeric characters with at least one number or special character). Pick or create a directory to which you can write output.    Create a Kubernetes Secret for the WebLogic administrator credentials containing the username and password for the domain, using the create-weblogic-credentials script:</description>
    </item>
    
    <item>
      <title>Clean up</title>
      <link>/weblogic-kubernetes-operator/quickstart/cleanup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/quickstart/cleanup/</guid>
      <description>Remove the domain.   Remove the domain&amp;rsquo;s ingress by using helm:
$ helm uninstall sample-domain1-ingress -n sample-domain1-ns   Remove the domain resources by using the sample delete-weblogic-domain-resources script:
$ kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1   Use kubectl to confirm that the server pods and domain resource are gone:
$ kubectl get pods -n sample-domain1-ns $ kubectl get domains -n sample-domain1-ns   Remove the domain namespace.   Configure the Traefik load balancer to stop managing the ingresses in the domain namespace:</description>
    </item>
    
  </channel>
</rss>