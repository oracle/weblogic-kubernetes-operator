<!-- Copyright (c) 2020, 2022, Oracle and/or its affiliates.
     Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl. -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>oracle.kubernetes</groupId>
        <artifactId>operator-parent</artifactId>
        <version>4.0.2</version>
    </parent>

    <artifactId>integration-tests</artifactId>

    <description>WebLogic Kubernetes Operator Integration Tests</description>
    <name>integration-tests</name>

    <properties>
        <skipITs>false</skipITs>
        <!-- integration tests configuration -->
        <wko.it.skip.cleanup>${env.SKIP_CLEANUP}</wko.it.skip.cleanup>
        <wko.it.domain.version>${env.DOMAIN_VERSION}</wko.it.domain.version>
        <wko.it.kind.repo>${env.KIND_REPO}</wko.it.kind.repo>
        <wko.it.test.images.repo>${env.TEST_IMAGES_REPO}</wko.it.test.images.repo>
        <wko.it.base.images.repo>${env.BASE_IMAGES_REPO}</wko.it.base.images.repo>
        <wko.it.weblogic.image.name>${env.WEBLOGIC_IMAGE_NAME}</wko.it.weblogic.image.name>
        <wko.it.weblogic.image.tag>${env.WEBLOGIC_IMAGE_TAG}</wko.it.weblogic.image.tag>
        <wko.it.fmwinfra.image.name>${env.FMWINFRA_IMAGE_NAME}</wko.it.fmwinfra.image.name>
        <wko.it.fmwinfra.image.tag>${env.FMWINFRA_IMAGE_TAG}</wko.it.fmwinfra.image.tag>
        <wko.it.db.image.name>${env.DB_IMAGE_NAME}</wko.it.db.image.name>
        <wko.it.db.image.tag>${env.DB_IMAGE_TAG}</wko.it.db.image.tag>
        <wko.it.jenkins.build.id>${env.BUILD_ID}</wko.it.jenkins.build.id>
        <wko.it.jenkins.branch.name>${env.BRANCH_NAME}</wko.it.jenkins.branch.name>
        <wko.it.k8s.nodeport.host>${env.K8S_NODEPORT_HOST}</wko.it.k8s.nodeport.host>
        <wko.it.k8s.nodeport.hostname>${env.K8S_NODEPORT_HOSTNAME}</wko.it.k8s.nodeport.hostname>
        <wko.it.result.root>${env.RESULT_ROOT}</wko.it.result.root>
        <wko.it.pv.root>${env.PV_ROOT}</wko.it.pv.root>
        <wko.it.apache.image.name>${env.APACHE_IMAGE_NAME}</wko.it.apache.image.name>
        <wko.it.apache.image.tag>${env.APACHE_IMAGE_TAG}</wko.it.apache.image.tag>
        <wko.it.fluentd.image.version>${env.FLUENTD_IMAGE_VERSION}</wko.it.fluentd.image.version>
        <wko.it.skip.build.images.if.exists>${env.SKIP_BUILD_IMAGES_IF_EXISTS}</wko.it.skip.build.images.if.exists>
        <wko.it.wdt.test.version>${env.WDT_TEST_VERSION}</wko.it.wdt.test.version>
        <wko.it.monitoring.exporter.webapp.version>${env.MONITORING_EXPORTER_WEBAPP_VERSION}</wko.it.monitoring.exporter.webapp.version>
        <wko.it.monitoring.exporter.branch>${env.MONITORING_EXPORTER_BRANCH}</wko.it.monitoring.exporter.branch>
        <wko.it.prometheus.chart.version>${env.PROMETHEUS_CHART_VERSION}</wko.it.prometheus.chart.version>
        <wko.it.grafana.chart.version>${env.GRAFANA_CHART_VERSION}</wko.it.grafana.chart.version>
        <wko.it.istio.version>${env.ISTIO_VERSION}</wko.it.istio.version>
        <wko.it.oke.cluster>${env.OKE_CLUSTER}</wko.it.oke.cluster>
        <wko.it.nfs.server>${env.NFS_SERVER}</wko.it.nfs.server>
        <wko.it.node.ip>${env.NODE_IP}</wko.it.node.ip>
        <wko.it.fss.dir>${env.FSS_DIR}</wko.it.fss.dir>
        <wko.it.okd.cluster>${env.OKD}</wko.it.okd.cluster>
        <wko.it.oracle.db.operator.release>${env.ORACLE_DB_OPERATOR_RELEASE}</wko.it.oracle.db.operator.release>
        <wko.it.oraclelinux.test.version>${env.ORACLELINUX_TEST_VERSION}</wko.it.oraclelinux.test.version>
        <wko.it.wdt.download.url>${wdt.download.url}</wko.it.wdt.download.url>
        <wko.it.wit.download.url>${wit.download.url}</wko.it.wit.download.url>
        <wko.it.remoteconsole.download.url>${remoteconsole.download.url}</wko.it.remoteconsole.download.url>
        <wko.it.wle.version>${env.WLE_VERSION}</wko.it.wle.version>
        <wko.it.wle.download.url>${wle.download.url}</wko.it.wle.download.url>
        <wko.it.wle.file.name>${env.WLE_FILE_NAME}</wko.it.wle.file.name>
        <wko.it.snake.version>${snake.version}</wko.it.snake.version>
        <wko.it.snake.download.url>${snake.download.url}</wko.it.snake.download.url>
        <wko.it.collect.logs.on.success>${env.COLLECT_LOGS_ON_SUCCESS}</wko.it.collect.logs.on.success>
        <wko.it.sleep.seconds.after.failure>${env.SLEEP_SECONDS_AFTER_FAILURE}</wko.it.sleep.seconds.after.failure>
        <wko.it.wit.java.home>${env.WIT_JAVA_HOME}</wko.it.wit.java.home>
        <wko.it.weblogic.image.tags>${env.WEBLOGIC_IMAGE_TAGS}</wko.it.weblogic.image.tags>
        <wko.it.weblogic.image.tag>${env.WEBLOGIC_IMAGE_TAG}</wko.it.weblogic.image.tag>
        <wko.it.k8s.nodeport.host1>${env.K8S_NODEPORT_HOST1}</wko.it.k8s.nodeport.host1>
        <wko.it.k8s.nodeport.host2>${env.K8S_NODEPORT_HOST2}</wko.it.k8s.nodeport.host2>
        <wko.it.opdemo>${env.opdemo}</wko.it.opdemo>
        <wko.it.image.name.operator>${env.IMAGE_NAME_OPERATOR}</wko.it.image.name.operator>
        <wko.it.image.tag.operator>${env.IMAGE_TAG_OPERATOR}</wko.it.image.tag.operator>
        <includes-failsafe>**/It*</includes-failsafe>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kubernetes</groupId>
            <artifactId>client-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kubernetes</groupId>
            <artifactId>client-java-extended</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>${htmlunit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-required-environment-variables-are-set</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <rules>
                                <requireEnvironmentVariable>
                                    <message>Set the BASE_IMAGES_REPO environment variable to specify the repo for pulling base weblogic/fmw images.</message>
                                    <variableName>BASE_IMAGES_REPO</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the BASE_IMAGES_REPO_USERNAME environment variable to create pull secret for BASE_IMAGES_REPO.</message>
                                    <variableName>BASE_IMAGES_REPO_USERNAME</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the BASE_IMAGES_REPO_PASSWORD environment variable to create pull secret for BASE_IMAGES_REPO.</message>
                                    <variableName>BASE_IMAGES_REPO_PASSWORD</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the BASE_IMAGES_REPO_EMAIL environment variable to create pull secret for BASE_IMAGES_REPO.</message>
                                    <variableName>BASE_IMAGES_REPO_EMAIL</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the TEST_IMAGES_REPO environment variable to specify the repo for pulling local infra images and domain images.</message>
                                    <variableName>TEST_IMAGES_REPO</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the TEST_IMAGES_REPO_USERNAME environment variable to create pull secret for TEST_IMAGES_REPO.</message>
                                    <variableName>TEST_IMAGES_REPO_USERNAME</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the TEST_IMAGES_REPO_PASSWORD environment variable to create pull secret for TEST_IMAGES_REPO.</message>
                                    <variableName>TEST_IMAGES_REPO_PASSWORD</variableName>
                                </requireEnvironmentVariable>
                                <requireEnvironmentVariable>
                                    <message>Set the TEST_IMAGES_REPO_EMAIL environment variable to create pull secret for TEST_IMAGES_REPO.</message>
                                    <variableName>TEST_IMAGES_REPO_EMAIL</variableName>
                                </requireEnvironmentVariable>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <skipTests>${skipITs}</skipTests>
                    <argLine>${failsafeArgLine}</argLine>
                    <failIfNoTests>false</failIfNoTests>
                    <includes>
                        <include>
                            ${includes-failsafe}
                        </include>
                    </includes>
                    <excludes>
                        <exclude/>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <systemPropertyVariables>
                                <java.util.logging.SimpleFormatter.format>
                                    &lt;%1$tm-%1$td-%1$tY %1$tH:%1$tM:%1$tS&gt; &lt;%4$s&gt; &lt;%2$s&gt; &lt;%5$s%6$s&gt;%n
                                </java.util.logging.SimpleFormatter.format>
                                <wko.it.skip.cleanup>${wko.it.skip.cleanup}</wko.it.skip.cleanup>
                                <wko.it.domain.version>${wko.it.domain.version}</wko.it.domain.version>
                                <wko.it.kind.repo>${wko.it.kind.repo}</wko.it.kind.repo>
                                <wko.it.test.images.repo>${wko.it.test.images.repo}</wko.it.test.images.repo>
                                <wko.it.base.images.repo>${wko.it.base.images.repo}</wko.it.base.images.repo>
                                <wko.it.weblogic.image.name>${wko.it.weblogic.image.name}</wko.it.weblogic.image.name>
                                <wko.it.weblogic.image.tag>${wko.it.weblogic.image.tag}</wko.it.weblogic.image.tag>
                                <wko.it.fmwinfra.image.name>${wko.it.fmwinfra.image.name}</wko.it.fmwinfra.image.name>
                                <wko.it.fmwinfra.image.tag>${wko.it.fmwinfra.image.tag}</wko.it.fmwinfra.image.tag>
                                <wko.it.db.image.name>${wko.it.db.image.name}</wko.it.db.image.name>
                                <wko.it.db.image.tag>${wko.it.db.image.tag}</wko.it.db.image.tag>
                                <wko.it.jenkins.build.id>${wko.it.jenkins.build.id}</wko.it.jenkins.build.id>
                                <wko.it.jenkins.branch.name>${wko.it.jenkins.branch.name}</wko.it.jenkins.branch.name>
                                <wko.it.k8s.nodeport.host>${wko.it.k8s.nodeport.host}</wko.it.k8s.nodeport.host>
                                <wko.it.k8s.nodeport.hostname>${wko.it.k8s.nodeport.hostname}</wko.it.k8s.nodeport.hostname>
                                <wko.it.result.root>${wko.it.result.root}</wko.it.result.root>
                                <wko.it.pv.root>${wko.it.pv.root}</wko.it.pv.root>
                                <wko.it.apache.image.name>${wko.it.apache.image.name}</wko.it.apache.image.name>
                                <wko.it.apache.image.tag>${wko.it.apache.image.tag}</wko.it.apache.image.tag>
                                <wko.it.fluentd.image.version>${wko.it.fluentd.image.version}</wko.it.fluentd.image.version>
                                <wko.it.skip.build.images.if.exists>${wko.it.skip.build.images.if.exists}</wko.it.skip.build.images.if.exists>
                                <wko.it.wdt.test.version>${wko.it.wdt.test.version}</wko.it.wdt.test.version>
                                <wko.it.monitoring.exporter.webapp.version>${wko.it.monitoring.exporter.webapp.version}</wko.it.monitoring.exporter.webapp.version>
                                <wko.it.monitoring.exporter.branch>${wko.it.monitoring.exporter.branch}</wko.it.monitoring.exporter.branch>
                                <wko.it.prometheus.chart.version>${wko.it.prometheus.chart.version}</wko.it.prometheus.chart.version>
                                <wko.it.grafana.chart.version>${wko.it.grafana.chart.version}</wko.it.grafana.chart.version>
                                <wko.it.istio.version>${wko.it.istio.version}</wko.it.istio.version>
                                <wko.it.oke.cluster>${wko.it.oke.cluster}</wko.it.oke.cluster>
                                <wko.it.nfs.server>${wko.it.nfs.server}</wko.it.nfs.server>
                                <wko.it.fss.dir>${wko.it.fss.dir}</wko.it.fss.dir>
                                <wko.it.okd.cluster>${wko.it.okd.cluster}</wko.it.okd.cluster>
                                <wko.it.oracle.db.operator.release>${wko.it.oracle.db.operator.release}</wko.it.oracle.db.operator.release>
                                <wko.it.oraclelinux.test.version>${wko.it.oraclelinux.test.version}</wko.it.oraclelinux.test.version>
                                <wko.it.wdt.download.url>${wko.it.wdt.download.url}</wko.it.wdt.download.url>
                                <wko.it.wit.download.url>${wko.it.wit.download.url}</wko.it.wit.download.url>
                                <wko.it.remoteconsole.download.url>${wko.it.remoteconsole.download.url}</wko.it.remoteconsole.download.url>
                                <wko.it.wle.version>${wko.it.wle.version}</wko.it.wle.version>
                                <wko.it.wle.download.url>${wko.it.wle.download.url}</wko.it.wle.download.url>
                                <wko.it.wle.file.name>${wko.it.wle.file.name}</wko.it.wle.file.name>
                                <wko.it.snake.version>${wko.it.snake.version}</wko.it.snake.version>
                                <wko.it.snake.download.url>${wko.it.snake.download.url}</wko.it.snake.download.url>
                                <wko.it.collect.logs.on.success>${wko.it.collect.logs.on.success}</wko.it.collect.logs.on.success>
                                <wko.it.sleep.seconds.after.failure>${wko.it.sleep.seconds.after.failure}</wko.it.sleep.seconds.after.failure>
                                <wko.it.wit.java.home>${wko.it.wit.java.home}</wko.it.wit.java.home>
                                <wko.it.weblogic.image.tags>${wko.it.weblogic.image.tags}</wko.it.weblogic.image.tags>
                                <wko.it.weblogic.image.tag>${wko.it.weblogic.image.tag}</wko.it.weblogic.image.tag>
                                <wko.it.k8s.nodeport.host1>${wko.it.k8s.nodeport.host1}</wko.it.k8s.nodeport.host1>
                                <wko.it.k8s.nodeport.host2>${wko.it.k8s.nodeport.host2}</wko.it.k8s.nodeport.host2>
                                <wko.it.opdemo>${wko.it.opdemo}</wko.it.opdemo>
                                <wko.it.image.name.operator>${wko.it.image.name.operator}</wko.it.image.name.operator>
                                <wko.it.image.tag.operator>${wko.it.image.tag.operator}</wko.it.image.tag.operator>
                            </systemPropertyVariables>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <excludes>
                        <exclude/>
                    </excludes>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.conditions.deactivate = *
                            junit.jupiter.extensions.autodetection.enabled = true
                            junit.jupiter.testinstance.lifecycle.default = per_class
                        </configurationParameters>
                    </properties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>validate-shell-scripts</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <arguments>
                              ${project.basedir}/../validateScripts.sh
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${src-integration-test}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-resource</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${resource-integration-test}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <surefireArgLine></surefireArgLine>
                <failsafeArgLine></failsafeArgLine>
                <skipITs>true</skipITs>
            </properties>
        </profile>
        <profile>
            <id>integration-tests</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>**/It*</includes-failsafe>
            </properties>
        </profile>
        <profile>
            <id>oke-cert</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
		  **/ItMultiDomainModels,
                  **/ItServerStartPolicy,
                  **/ItServiceStartPolicyDynamicCluster,
                  **/ItServerStartPolicyConfigCluster,
                  **/ItMiiUpdateDomainConfig,
                  **/ItFmwDomainInPVUsingWLST,
                  **/ItFmwDomainInPVUsingWDT,
                  **/ItStickySession,
                  **/ItSessionMigration,
                  **/ItIstioTwoDomainsInImage,
                  **/ItPodsRestart,
                  **/ItUsabilityOperatorHelmChart,
                  **/ItInitContainers,
                  **/ItOperatorRestart,
                  **/ItPodsShutdownOption,
                  **/ItOCILoadBalancer,
                  **/ItManageNameSpace,
                  **/ItMiiAuxiliaryImage,
                  **/ItMiiCreateAuxImageWithImageTool,
                  **/ItMiiSampleWlsAux,
                  **/ItMiiServiceMigration,
                  **/ItMiiDomain,
                  **/ItLivenessProbeCustomization
               </includes-failsafe>
            </properties>
        </profile>

        <profile>
            <id>oke-sequential</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>oke-sequential</groups>
            </properties>
        </profile>

        <profile>
            <id>oke-parallel</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>oke-parallel</groups>
            </properties>
        </profile>

        <profile>
            <id>kind-sequential</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>kind-sequential</groups>
            </properties>
        </profile>

        <profile>
            <id>kind-parallel</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>kind-parallel</groups>
            </properties>
        </profile>

        <profile>
            <id>wko-olcne-cert</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
                   **/ItConfigDistributionStrategy,
                   **/ItCrossDomainTransaction,
                   **/ItElasticLogging,
                   **/ItElasticLoggingFluentd,
                   **/ItIntrospectVersion,
                   **/ItIstioDomainInPV,
                   **/ItIstioMiiDomain,
                   **/ItMiiAuxiliaryImage,
                   **/ItMiiCreateAuxImageWithImageTool,
                   **/ItMiiAuxiliaryImageCluster,
                   **/ItMiiSampleWlsAux,
                   **/ItMiiServiceMigration,
                   **/ItMiiDomain,
                   **/ItMiiDynamicUpdate*,
                   **/ItMiiSampleWlsMain,
                   **/ItMiiUpdateDomainConfig,
                   **/ItMonitoringExporter*,
                   **/ItParameterizedDomain,
                   **/ItPodsShutdownOption,
                   **/ItProductionSecureMode,
                   **/ItWlsSamples,
                   **/ItSessionMigration,
                   **/ItSystemResOverrides
                </includes-failsafe>
            </properties>
        </profile>

        <profile>
            <id>wko-okd-wls-srg</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
                  **/ItCrossDomainTransaction,
                  **/ItKubernetesDomainEvents,
                  **/ItKubernetesNameSpaceWatchingEvents,
                  **/ItMiiAuxiliaryImage,
                  **/ItMiiAuxiliaryImageCluster,
                  **/ItMiiDomain,
                  **/ItMiiDomainModelInPV,
                  **/ItMiiMultiModel,
                  **/ItMiiUpdateDomainConfig,
                  **/ItMultiDomainModels,
                  **/ItPodsRestart,
                  **/ItRecoveryDomainInPV
                </includes-failsafe>
            </properties>
        </profile>

        <profile>
            <id>wko-okd-wls-mrg</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
                  **/ItCoherenceTests,
                  **/ItConfigDistributionStrategy,
                  **/ItDedicatedMode,
                  **/ItExternalLbTunneling,
                  **/ItExternalNodePortService,
                  **/ItInitContainers,
                  **/ItIntrospectVersion,
                  **/ItLiftAndShiftFromOnPremDomain,
                  **/ItLivenessProbeCustomization,
                  **/ItManagedCoherence,
                  **/ItMiiDynamicUpdate*,
                  **/ItMiiCustomSslStore,
                  **/ItMiiSampleWlsAux,
                  **/ItMiiSampleWlsMain,
                  **/ItOperatorRestart,
                  **/ItPodsShutdownOption,
                  **/ItPodTemplates,
                  **/ItProductionSecureMode,
                  **/ItRemoteConsole,
                  **/ItServerStartPolicy,
                  **/ItServiceStartPolicyDynamicCluster,
                  **/ItServerStartPolicyConfigCluster,
                  **/ItSessionMigration,
                  **/ItStickySession,
                  **/ItSystemResOverrides,
                  **/ItMonitoringExporterWebApp,
                  **/ItMonitoringExporterSideCar,
                  **/ItMonitoringExporterSamples
                </includes-failsafe>
            </properties>
        </profile>

        <profile>
            <id>wko-okd-fmw-cert</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
                  **/ItFmwDomainInPVUsingWLST,
                  **/ItFmwDomainInPVUsingWDT,
                  **/ItFmwDynamicClusterMiiDomain,
                  **/ItFmwMiiDomain,
                  **/ItMiiSampleFmwMain,
                  **/ItMiiSampleFmwAux
                </includes-failsafe>
            </properties>
        </profile>

        <profile>
            <id>wko-okd-wls-cert</id>
            <properties>
                <skipITs>false</skipITs>
                <includes-failsafe>
                  **/ItCrossDomainTransaction,
                  **/ItKubernetesDomainEvents,
                  **/ItKubernetesNameSpaceWatchingEvents,
                  **/ItMiiAuxiliaryImage,
                  **/ItMiiAuxiliaryImageCluster,
                  **/ItMiiDomain,
                  **/ItMiiDomainModelInPV,
                  **/ItMiiMultiModel,
                  **/ItMiiUpdateDomainConfig,
                  **/ItMultiDomainModels,
                  **/ItPodsRestart,
                  **/ItCoherenceTests,
                  **/ItConfigDistributionStrategy,
                  **/ItDedicatedMode,
                  **/ItExternalLbTunneling,
                  **/ItExternalNodePortService,
                  **/ItInitContainers,
                  **/ItIntrospectVersion,
                  **/ItLiftAndShiftFromOnPremDomain,
                  **/ItLivenessProbeCustomization,
                  **/ItManagedCoherence,
                  **/ItMiiDynamicUpdate*,
                  **/ItMiiCustomSslStore,
                  **/ItMiiSampleWlsAux,
                  **/ItMiiSampleWlsMain,
                  **/ItOperatorRestart,
                  **/ItPodsShutdownOption,
                  **/ItPodTemplates,
                  **/ItProductionSecureMode,
                  **/ItRemoteConsole,
                  **/ItServerStartPolicy,
                  **/ItServiceStartPolicyDynamicCluster,
                  **/ItServerStartPolicyConfigCluster,
                  **/ItSessionMigration,
                  **/ItStickySession,
                  **/ItSystemResOverrides,
                  **/ItMonitoringExporterWebApp,
                  **/ItMonitoringExporterSideCar,
                  **/ItMonitoringExporterSamples,
                  **/ItRecoveryDomainInPV
                </includes-failsafe>
          </properties>
        </profile>

        <profile>
            <id>wls-srg</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>gate,samples-gate</groups>
            </properties>
        </profile>

        <profile>
            <id>crio-pipeline</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>crio</groups>
            </properties>
        </profile>

        <profile>
            <id>olcne</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>olcne</groups>
            </properties>
        </profile>
        <profile>
            <id>toolkits-srg</id>
            <properties>
                <skipITs>false</skipITs>
                <groups>toolkits-srg</groups>
            </properties>
        </profile>
    </profiles>
</project>
