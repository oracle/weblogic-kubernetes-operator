# Copyright (c) 2020, 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
rbac:
  create: true

podSecurityPolicy:
  enabled: false

serviceAccounts:
  pushgateway:
    create: false

pushgateway:
  enabled: false
  image:
    repository: phx.ocir.io/weblogick8s/test-images/prom/pushgateway
    tag: v1.4.3
    pullPolicy: IfNotPresent

alertmanager:
  enabled: true

  persistentVolume:
    existingClaim: pvc-alertmanager
  service:
    type: NodePort
    nodePort: 32500
  # securityContext:
  #   runAsNonRoot: false
  #  runAsUser: 0
  image:
    repository: phx.ocir.io/weblogick8s/test-images/prometheus/alertmanager
    tag: v0.24.0
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534

nodeExporter:
  enabled: false
configmapReload:
  prometheus:
    ## If false, the configmap-reload container will not be deployed
    ##
    enabled: true

    ## configmap-reload container name
    ##
    name: configmap-reload

    ## configmap-reload container image
    ##
    image:
      repository: phx.ocir.io/weblogick8s/test-images/jimmidyson/configmap-reload
      tag: v0.5.0
      # When digest is set to a non-empty value, images will be pulled by digest (regardless of tag value).
      digest: ""
      pullPolicy: IfNotPresent

server:
  persistentVolume:
    existingClaim: pvc-prometheus
  service:
    type: NodePort
    nodePort: 30500
  securityContext:
    runAsUser: 0
    runAsNonRoot: false

  global:
    evaluation_interval: 1m
    scrape_interval: 10s
    scrape_timeout: 5s
  image:
    repository: phx.ocir.io/weblogick8s/test-images/prometheus/prometheus
    tag: v2.39.1
    pullPolicy: IfNotPresent

alertmanagerFiles:
  alertmanager.yml:
    global:
      resolve_timeout: 5m

    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'logging-webhook'
    receivers:
      - name: 'logging-webhook'
        webhook_configs:
          - url: 'http://webhook.webhook.svc.cluster.local:8080/log'

serverFiles:
  alerts:
    groups:
      - name: node_rules
        rules:
          - alert: ClusterWarning
            for: 15s
            expr: sum by(weblogic_domainUID, weblogic_clusterName) (up{weblogic_domainUID=~'.+'}) == 1
            labels:
              severity: page
            annotations:
              description: 'Some WLS cluster has only one running server for more than 1 minutes.'
              summary: 'Some wls cluster is in warning state.'

extraScrapeConfigs: |
  - job_name: 'wls-domain1'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_weblogic_domainUID, __meta_kubernetes_pod_label_weblogic_clusterName]
      action: keep
      regex: default;domain1;(.+)
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    basic_auth:
      username: weblogic
      password: welcome1
