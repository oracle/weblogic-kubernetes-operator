# Add podSecurityContext section at ServerPod Level
# Make sure all pod(s) re-started 
#serverPod:
# podSecurityContext:
#   runAsUser: 1000
#   fsGroup: 2000
# The generated server pods should look like:
#spec:
# securityContext:
#   runAsUser: 1000
#   fsGroup: 2000

apiVersion: "weblogic.oracle/v3alpha1"
kind: Domain
metadata:
  name: domainpodsrestart
  namespace: default
  labels:
    weblogic.resourceVersion: domain-v2
    weblogic.domainUID: domainpodsrestart
spec:
  domainHome: /shared/domains/domainpodsrestart
  domainHomeInImage: false
  image: "store/oracle/weblogic:12.2.1.3"
  imagePullPolicy: "IfNotPresent"
  imagePullSecrets:
  - name: myImagePullSecret
  webLogicCredentialsSecret: 
    name: domainpodsrestart-weblogic-credentials
  includeServerOutInPodLog: true
  logHomeEnabled: true
  logHome: /shared/logs/domainpodsrestart
  serverStartPolicy: "IF_NEEDED"
  serverPod:
    podSecurityContext:
      runAsUser: 1000
      fsGroup: 2000
    env:
    - name: JAVA_OPTIONS
      value: "-Dweblogic.StdoutDebugEnabled=false  -Xms64m -Xmx1024m"
    - name: USER_MEM_ARGS
      value: "-Xms64m -Xmx256m "
    volumes:
    - name: weblogic-domain-storage-volume
      persistentVolumeClaim:
        claimName: domainpodsrestart-weblogic-sample-pvc
    volumeMounts:
    - mountPath: /shared
      name: weblogic-domain-storage-volume
  adminServer:
    serverStartState: "RUNNING"
    adminService:
      channels:
       - channelName: T3Channel
  clusters:
  - clusterName: cluster-1
    serverStartState: "RUNNING"
    replicas: 1
