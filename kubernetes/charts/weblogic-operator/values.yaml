# Copyright 2018, 2019, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.

# serviceAccount specifies the name of the service account in the operator's namespace that the
# operator will use to make requests to the Kubernetes API server.
# The customer is responsible for creating the service account.
# If not specified, the the operator will use the operator's namespace's 'default' service account.
serviceAccount: "default"

# domainNamespaces specifies list of WebLogic Domain namespaces which the operator manages.
# The customer is responsible for creating these namespaces.
# If not specified, then the operator will manage WebLogic domains in the Kubernetes 'default' namespace.
#
# Example : In the configuration below, the helm installation will manage namespace1 and namespace2.
#
# domainNamespaces:
#   - "namespace1"
#   - "namespace2"
domainNamespaces:
  - "default"

# image specifies the docker image containing the operator code.
image: "oracle/weblogic-kubernetes-operator:2.0"

# imagePullPolicy specifies the image pull policy for the operator docker image.
imagePullPolicy: "IfNotPresent"

# imagePullSecrets contains an optional list of Kubernetes secrets, in the operator's namepace,
# that are needed to access the registry containing the operator Docker image.
# The customer is responsible for creating the secret.
# If no secrets are required, then omit this property.
#
# Example : a secret is needed, and has been stored in 'my-operator-secret'
#
# imagePullSecrets:
# - name: "my-operator-secret"
#
# imagePullSecrets:
# - name:

# externalRestEnabled controls whether the the operator's REST interface is exposed
# outside of the Kubernetes cluster on the port specified by the 'externalRestHttpsPort'
# property.
#
# If set to true, then the customer must provide the SSL certificate and private key for
# the operator's external REST intervace by specifying the 'externalOperatorCert' and
# 'externalOperatorKey' properties.
externalRestEnabled: false

# externalRestHttpsPort specifies the node port that should be allocated for the external operator REST https interface.
# This parameter is required if 'externalRestEnabled' is true.
# Otherwise, it is ignored.
externalRestHttpsPort: 31001

# The name of the secret used to store the certificate and private key to use for the external operator REST https interface.
# The secret has to be created in the same namespace of the welbogic operator.
# This parameter is required if 'externalRestEnabled' is true. Otherwise, it is ignored.
# As example, an external rest identity can be created using the following sample script 
# kubernetes/samples/scripts/rest/generate-external-rest-identity.sh
#externalRestIdentitySecret: 

# remoteDebugNodePortEnabled specifies whether or not the operator will start a Java remote debug server
# on the provided port and suspend execution until a remote debugger has attached.
# The 'internalDebugHttpPort' property controls the port number inside the Kubernetes
# cluster and the 'externalDebugHttpPort' property controls the port number outside
# the Kubernetes cluster.
remoteDebugNodePortEnabled: false

# internalDebugHttpPort specifes the port number inside the Kubernetes cluster for the operator's Java
# remote debug server.
# This parameter is required if 'remoteDebugNodePortEnabled' is true.
# Otherwise, it is ignored.
internalDebugHttpPort: 30999

# externalDebugHttpPort specifies the node port that should be allocated for the Kubernetes cluster for the operator's
# Java remote debug server.
# This parameter is required if 'remoteDebugNodePortEnabled' is true.
# Otherwise, it is ignored.
externalDebugHttpPort: 30999

# javaLoggingLevel specifies the level of Java logging that should be enabled in the operator.
# Valid values are: "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", and "FINEST".
javaLoggingLevel: "INFO"

# elkIntegrationEnabled specifies whether or not ELK integration is enabled.
elkIntegrationEnabled: false

# logStashImage specifies the docker image containing logstash.
# This parameter is ignored if 'elkIntegrationEnabled' is false.
logStashImage: "logstash:5"

# elasticSearchHost specifies the hostname of where elasticsearch is running.
# This parameter is ignored if 'elkIntegrationEnabled' is false.
elasticSearchHost: "elasticsearch.default.svc.cluster.local"

# elasticSearchPort specifies the port number of where elasticsearch is running.
# This parameter is ignored if 'elkIntegrationEnabled' is false.
elasticSearchPort: 9200
