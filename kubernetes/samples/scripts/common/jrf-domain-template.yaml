# Copyright (c) 2017, 2021, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
# This is an example of how to define a Domain resource.
#
apiVersion: "weblogic.oracle/v9"
kind: Domain
metadata:
  name: %DOMAIN_UID%
  namespace: %NAMESPACE%
  labels:
    weblogic.domainUID: %DOMAIN_UID%
spec:
  # The WebLogic Domain Home
  domainHome: %DOMAIN_HOME%

  # The domain home source type
  # Set to PersistentVolume for domain-in-pv, Image for domain-in-image, or FromModel for model-in-image
  domainHomeSourceType: %DOMAIN_HOME_SOURCE_TYPE%

  # The WebLogic Server image that the Operator uses to start the domain
  image: "%WEBLOGIC_IMAGE%"

  # imagePullPolicy defaults to "Always" if image version is :latest
  imagePullPolicy: %WEBLOGIC_IMAGE_PULL_POLICY%

  # Identify which Secret contains the credentials for pulling an image
  %WEBLOGIC_IMAGE_PULL_SECRET_PREFIX%imagePullSecrets:
  %WEBLOGIC_IMAGE_PULL_SECRET_PREFIX%- name: %WEBLOGIC_IMAGE_PULL_SECRET_NAME%

  # Identify which Secret contains the WebLogic Admin credentials (note that there is an example of
  # how to create that Secret at the end of this file)
  webLogicCredentialsSecret: 
    name: %WEBLOGIC_CREDENTIALS_SECRET_NAME%

  # Whether to include the server out file into the pod's stdout, default is true
  includeServerOutInPodLog: %INCLUDE_SERVER_OUT_IN_POD_LOG%

  # Whether to enable log home
  %LOG_HOME_ON_PV_PREFIX%logHomeEnabled: %LOG_HOME_ENABLED%

  # Whether to write HTTP access log file to log home
  %LOG_HOME_ON_PV_PREFIX%httpAccessLogInLogHome: %HTTP_ACCESS_LOG_IN_LOG_HOME%

  # The in-pod location for domain log, server logs, server out, introspector out, and Node Manager log files
  %LOG_HOME_ON_PV_PREFIX%logHome: %LOG_HOME%
  # An (optional) in-pod location for data storage of default and custom file stores.
  # If not specified or the value is either not set or empty (e.g. dataHome: "") then the
  # data storage directories are determined from the WebLogic domain home configuration.
  dataHome: "%DATA_HOME%"

  # serverStartPolicy legal values are "Never, "IfNeeded", or "AdminOnly"
  # This determines which WebLogic Servers the Operator will start up when it discovers this Domain
  # - "Never" will not start any server in the domain
  # - "AdminOnly" will start up only the administration server (no managed servers will be started)
  # - "IfNeeded" will start all non-clustered servers, including the administration server and clustered servers up to the replica count
  serverStartPolicy: %SERVER_START_POLICY%

  serverPod:
    # an (optional) list of environment variable to be set on the servers
    env:
    - name: JAVA_OPTIONS
      value: "%JAVA_OPTIONS%"
    - name: USER_MEM_ARGS
      value: "-Djava.security.egd=file:/dev/./urandom -Xms256m -Xmx1024m "
    %OPTIONAL_SERVERPOD_RESOURCES%
    %LOG_HOME_ON_PV_PREFIX%volumes:
    %LOG_HOME_ON_PV_PREFIX%- name: weblogic-domain-storage-volume
    %LOG_HOME_ON_PV_PREFIX%  persistentVolumeClaim:
    %LOG_HOME_ON_PV_PREFIX%    claimName: %DOMAIN_PVC_NAME%
    %LOG_HOME_ON_PV_PREFIX%volumeMounts:
    %LOG_HOME_ON_PV_PREFIX%- mountPath: %DOMAIN_ROOT_DIR%
    %LOG_HOME_ON_PV_PREFIX%  name: weblogic-domain-storage-volume

  # adminServer is used to configure the desired behavior for starting the administration server.
  adminServer:
    %EXPOSE_ANY_CHANNEL_PREFIX%adminService:
    %EXPOSE_ANY_CHANNEL_PREFIX%  channels:
    # The Admin Server's NodePort
    %EXPOSE_ADMIN_PORT_PREFIX%   - channelName: default
    %EXPOSE_ADMIN_PORT_PREFIX%     nodePort: %ADMIN_NODE_PORT%
    # Uncomment to export the T3Channel as a service
    %EXPOSE_T3_CHANNEL_PREFIX%   - channelName: T3Channel
    serverPod:
      # an (optional) list of environment variable to be set on the admin servers
      env:
      - name: USER_MEM_ARGS
        value: "-Djava.security.egd=file:/dev/./urandom -Xms512m -Xmx1024m "

  # References to Cluster resources that describe the lifecycle options for all
  # the Managed Server members of a WebLogic cluster, including Java
  # options, environment variables, additional Pod content, and the ability to
  # explicitly start, stop, or restart cluster members. The Cluster resource
  # must describe a cluster that already exists in the WebLogic domain
  # configuration.
  clusters:
  - name: %DOMAIN_UID%-%CLUSTER_NAME%

  # The number of managed servers to start for unlisted clusters
  # replicas: 1

---
# This is an example of how to define a Cluster resource.
apiVersion: weblogic.oracle/v1
kind: Cluster
metadata:
  name: %DOMAIN_UID%-%CLUSTER_NAME%
  namespace: %NAMESPACE%
spec:
  clusterName: %CLUSTER_NAME%
  replicas: %INITIAL_MANAGED_SERVER_REPLICAS%

