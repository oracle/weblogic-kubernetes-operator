# Copyright 2018, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.

# The version of this inputs file.  Do not modify.
version: create-weblogic-sample-domain-inputs-v1

# Port number for admin server
adminPort: 7001

# Name of the Admin Server
adminServerName: admin-server

# Unique ID identifying a domain.
# This ID must not contain an underscope ("_"), and must be lowercase and unique across all domains 
# in a Kubernetes cluster.
domainUID: domain1

# Determines which WebLogic Servers the Operator will start up
# Legal values are "NEVER", "IF_NEEDED", or "ADMIN_ONLY"
serverStartPolicy: IF_NEEDED

# Cluster name
clusterName: cluster-1

# Number of managed servers to generate for the domain
configuredManagedServerCount: 5

# Number of managed servers to initially start for the domain
initialManagedServerReplicas: 2

# Base string used to generate managed server names
managedServerNameBase: managed-server

# Port number for each managed server
managedServerPort: 8001

# Boolean indicating if production mode is enabled for the domain
productionModeEnabled: true

# WebLogic Docker image that the domain resource will pull if needed.
#
# You only need to specify this if you want to tag the generated image to a different name.
#
# If you are running the sample script from a machine that is remote to the Kubernetes cluster,
# you need to specify this to point to an image in a registry local to the cluster. You
# then need to push the generate image to that registry before starting the domain.
#
# If not specified, the sample uses the internally generated image name, 
# either "domain-home-in-image-wdt:latest" or "domain-home-in-image-wlst:latest".
#
# See README.md for more help.
#image: 

# Image pull policy
# Legal values are "IfNotPresent", "Always", or "Never"
imagePullPolicy: IfNotPresent

# Name of the Kubernetes secret to access the Docker Store to pull the WebLogic Server Docker image
# The presence of the secret will be validated when this parameter is enabled.
#imagePullSecretName:

# Name of the Kubernetes secret for the Admin Server's username and password
# The name must be lowercase. 
# If not specified, the value is derived from the domainUID as <domainUID>-weblogic-credentials
weblogicCredentialsSecretName: domain1-weblogic-credentials

# Whether to include server .out to the pod's stdout.
# The default is true.
includeServerOutInPodLog: true

# Specifies whether the log home is stored on the persistent volume.
# The default is false.
logHomeOnPV: false

# The in-pod name of the directory to store the domain, node manager, server logs, and server .out
# files in.
# If not specified, the value is derived from the domainUID as /shared/logs/<domainUID>
logHome: /shared/logs/domain1

# Port for the T3Channel of the NetworkAccessPoint
t3ChannelPort: 30012

# Public address for T3Channel of the NetworkAccessPoint.  This value should be set to the
# kubernetes server address, which you can get by running "kubectl cluster-info".  If this
# value is not set to that address, WLST will not be able to connect from outside the
# kubernetes cluster.
t3PublicAddress: kubernetes

# Boolean to indicate if the channel should be exposed as a service
exposeAdminT3Channel: false

# NodePort to expose for the admin server
adminNodePort: 30701

# Boolean to indicate if the adminNodePort will be exposed
exposeAdminNodePort: false

# Name of the domain namespace
namespace: default

# Java Option for Weblogic Server
javaOptions: -Dweblogic.StdoutDebugEnabled=false

# Name of the persistent volume claim 
# If not specified, the value is derived from the domainUID as <domainUID>-weblogic-sample-pvc
persistentVolumeClaimName: domain1-weblogic-sample-pvc

# Mount path of the domain persistent volume. 
domainPVMountPath: /shared

# Base WebLogic binary image used to build the WebLogic domain image
# The operator requires WebLogic Server 12.2.1.3.0 with patch 28076014 applied. 
# See README.md for more help.
#domainHomeImageBase: 

# Location of the WebLogic "domain home in image" Docker image sample in the 
# `https://github.com/oracle/docker-images.git` project.
# If not specified, use "./docker-images/OracleWebLogic/samples/12213-domain-home-in-image-wdt".
# Another possible value is "./docker-images/OracleWebLogic/samples/12213-domain-home-in-image",
# which uses a WLST script, instead of WDT, to generate the domain configuration.
domainHomeImageBuildPath: ./docker-images/OracleWebLogic/samples/12213-domain-home-in-image-wdt

