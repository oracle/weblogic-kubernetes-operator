# Domain in PV sample using WebLogic Deploy Tooling

 You can use [WebLogic Deploy Tooling](https://github.com/oracle/weblogic-deploy-tooling) (WDT) to introspect an already
 existing domain, such as an on-premises domain, and then create the same domain in a Persistent Volume (PV)
in Kubernetes. The [Discover Domain Tool](https://github.com/oracle/weblogic-deploy-tooling/blob/master/site/discover.md) generates a WDT model YAML file (a metadata representation of the
domain configuration) and a properties file, which contains a key=value pair for each property in the model.
This sample creates the domain using the WDT [Create Domain Tool](https://github.com/oracle/weblogic-deploy-tooling/blob/master/site/create.md)
and updates the domain using the [Update Domain Tool](https://github.com/oracle/weblogic-deploy-tooling/blob/master/site/update.md).
In both cases, the sample uses the [Extract Domain Resource Tool](https://github.com/oracle/weblogic-deploy-tooling/blob/master/site/kubernetes.md) to generate the `domain.yaml` file.

**NOTE**: When introspecting an existing domain with WDT, the resulting model might need to be modified for compatibility
with specific target environments, such as the Oracle WebLogic Server Kubernetes Operator. Also, you should update the
`create-domain-inputs.yaml` file for operator specific input.

This Domain in PV sample provides the following new functionality:

1. The create domain script, `create-domain.sh`, uses the Extract Domain Resource Tool to generate the domain CR YAML file (`domain.yaml`).
1. Updates the domain configuration using the Update Domain Tool with a WDT full model and makes the equivalent change to the
domain CR using the Extract Domain Resource Tool.
1. The [Create Domain Tool](https://github.com/oracle/weblogic-deploy-tooling/blob/master/site/create.md) and
Update Domain Tool accept the following input files: a WDT model file and the WDT properties file
    (generated using the Discover Domain Tool).

**Note**: The Update Domain Tool, `update-domain.sh`, supports updating _only_ a domain created using the WebLogic Deploy
Tooling. You can still create the domain by updating the `create-domain-inputs` YAML file.


This sample takes both the input YAML file and the generated properties file as input to
`createDomain.sh` and `updateDomain.sh`, as a comma-separated list.

To create a domain:

   1. Invoke `create-domain.sh -i  /path/to/directory/create-domain-inputs.yaml,/path/to/directory/properties-file
      -m /path/to/directory/users-wdt-model -o outputdir -v`

      This command creates a domain on PV and a `domain.yaml` file in `outputdir/weblogic-domain/domainname`.
      The order of the input files does not matter.

      The `domain.yaml` generated by the Extract Domain Resource Tool will have `--FIX ME--` statements for
      those values it cannot generate. You must fill in the information identified by `--FIX ME--`
      in the domain resource output. Make sure that the `domain.yaml` file does not contain any `--FIX ME--` statements
      before proceeding to the next step.
   1. `kubectl apply -f domain.yaml`

To update a domain:

   1. Invoke `update-domain.sh -i /path/to/directory/create-domain-inputs.yaml,/path/to/directory/properties-file
      -m /path/to/directory/users-wdt-model.yaml -o outputdir1 -v`

         In the input files, values such as `domainName`, `domainUID`, and `namespace`, should remain the same as when
         you created the domain.

         The command updates the WebLogic domain (`config.xml` file) and creates a `domain.yaml` file in
         `outputdir1/weblogic-domain/domainname`

         The `domain.yaml` generated by the Extract Domain Resource Tool will have `--FIX ME--` statements for
         those values it cannot generate. You must fill in the information identified by `--FIX ME--`
         in the domain resource output. Make sure that the `domain.yaml` file does not contain any `--FIX ME--` statements
         before proceeding to the next step.

         With operator 3.0.1 and later, you need to add an `introspectVersion` field to your `domain.yaml` file so that
         the operator will roll the domain with the updates.

   1. Edit the `outputdir1/weblogic-domain/domainname/domain.yaml` file and add or update the spec section as follows:

        `introspectVersion: "2"`

   1. `kubectl apply -f domain.yaml`

        The domain will be rolled and the updates will be applied. The changes will be reflected in the WebLogic configuration.
