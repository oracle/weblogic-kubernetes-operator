# Copyright 2017, 2018, Oracle Corporation and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#
# This is an example of how to define a Domain Custom Resource.
#
apiVersion: "weblogic.oracle/v2"
kind: Domain
metadata:
  name: %DOMAIN_UID%
  namespace: %NAMESPACE%
spec:
  # The domainUID must be unique across the entire Kubernetes Cluster.   Each WebLogic Domain must
  # have its own unique domainUID.  This does not have to be the same as the Domain Name.  It is allowed
  # to have multiple Domains with the same Domain Name, but they MUST have different domainUID's.
  # The domainUID is also used to identify the Persistent Volume that belongs to/with this Domain.
  domainUID: %DOMAIN_UID%
  # The WebLogic Domain Name
  domainName: %DOMAIN_NAME%
  # The Operator currently does not support other images
  image: "%WEBLOGIC_IMAGE%"
  # imagePullPolicy defaults to "Always" if image version is :latest
  imagePullPolicy: "%WEBLOGIC_IMAGE_PULL_POLICY%"
  # Identify which Secret contains the credentials for pulling an image
  imagePullSecrets:
  - name: %WEBLOGIC_IMAGE_PULL_SECRET_NAME%
  # Identify which Secret contains the WebLogic Admin credentials (note that there is an example of
  # how to create that Secret at the end of this file)
  adminSecret: 
    name: %WEBLOGIC_CREDENTIALS_SECRET_NAME%
  # The name of the Admin Server
  asName: "%ADMIN_SERVER_NAME%"
  # The Admin Server's ListenPort
  asPort: %ADMIN_PORT%
  # Whether to include the server out file into the pod's stdout, default is true
  includeServerOutInPodLog: %INCLUDE_SERVER_OUT_IN_POD_LOG%
  # The in-pod name of the directory to store the domain, node manager, server logs, and server .out
  # files in.
  # If not specified or empty, domain log file, server logs, server out, and node manager log files 
  # will be stored in the default logHome location of /shared/logs/<domainUID>/.
  logHome: %LOG_HOME%
  # serverStartPolicy legal values are "NEVER", "ALWAYS", "IF_NEEDED", or "ADMIN_ONLY"
  # This determines which WebLogic Servers the Operator will start up when it discovers this Domain
  # - "ALWAYS" will start up all defined servers
  # - "ADMIN_ONLY" will start up only the administration server (no managed servers will be started)
  # - "IF_NEEDED" will start all non-clustered servers, including the administration server and clustered servers up to the replica count
  serverStartPolicy: "%SERVER_START_POLICY%"
  # adminServer is used to configure the desired behavior for starting the administration server.
  adminServer:
  # serverStartState legal values are "RUNNING" or "ADMIN"
  # "RUNNING" means the listed server will be started up to "RUNNING" mode
  # "ADMIN" means the listed server will be start up to "ADMIN" mode
    serverStartState: "RUNNING"
    # The Admin Server's NodePort
    %EXPOSE_ADMIN_PORT_PREFIX%nodePort: %ADMIN_NODE_PORT%
    # Uncomment to export the T3Channel as a service
    %EXPOSE_T3_CHANNEL_PREFIX%exportedNetworkAccessPoints:
    %EXPOSE_T3_CHANNEL_PREFIX%  T3Channel: {}
    # an (optional) list of environment variable to be set on the server
    env:
    - name: JAVA_OPTIONS
      value: "%JAVA_OPTIONS%"
    - name: USER_MEM_ARGS
      value: "-Xms64m -Xmx256m "
  # clusters is used to configure the desired behavior for starting member servers of a cluster.  
  # If you use this entry, then the rules will be applied to ALL servers that are members of the named clusters.
  clusters:
    %CLUSTER_NAME%:
      serverStartState: "RUNNING"
      replicas: %INITIAL_MANAGED_SERVER_REPLICAS%
      env:
      - name: JAVA_OPTIONS
        value: "%JAVA_OPTIONS%"
      - name: USER_MEM_ARGS
        value: "-Xms64m -Xmx256m "
  # The number of managed servers to start for unlisted clusters
  # replicas: 1
  storage:
    predefined:
      claim: %DOMAIN_PVC_NAME%
