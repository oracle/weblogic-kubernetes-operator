# Copyright 2017, 2018, Oracle Corporation and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#
# This is an example of how to define a Domain Custom Resource.
#
apiVersion: "weblogic.oracle/v1"
kind: Domain
metadata:
  name: %DOMAIN_UID%
  namespace: %NAMESPACE%
  labels:
    weblogic.resourceVersion: domain-v2
    weblogic.domainUID: %DOMAIN_UID%
    weblogic.domainName: %DOMAIN_NAME%
spec:
  # The domainUID must be unique across the entire Kubernetes Cluster.
  # Each WebLogic Domain must have its own unique domainUID.
  # This does not have to be the same as the Domain Name.
  # It is allowed to have multiple Domains with the same Domain Name,
  # but they MUST have different domainUID's.
  # The domainUID is also used to identify the Persistent Volume
  # that belongs to/with this Domain.
  domainUID: %DOMAIN_UID%
  # The WebLogic Domain Name
  domainName: %DOMAIN_NAME%
  # The Operator currently does not support other images
  image: "%WEBLOGIC_IMAGE%"
  # imagePullPolicy defaults to "Always" if image version is :latest
  imagePullPolicy: "%WEBLOGIC_IMAGE_PULL_POLICY%"
  # Identify which Secret contains the credentials for pulling an image
  imagePullSecret:
    name: %WEBLOGIC_IMAGE_PULL_SECRET_NAME%
  # Identify which Secret contains the WebLogic Admin credentials (note that there is an example of
  # how to create that Secret at the end of this file)
  adminSecret: 
    name: %WEBLOGIC_CREDENTIALS_SECRET_NAME%
  # The name of the Admin Server
  asName: "%ADMIN_SERVER_NAME%"
  # The Admin Server's ListenPort
  asPort: %ADMIN_PORT%
  # domain home is in weblogic image or not
  domainHomeInImage: false

  # serverStartPolicy legal values are "NEVER" "ALWAYS" or "IF_NEEDED"
  # This determines which WebLogic Servers the Operator will start up
  # when it discovers this Domain
  # For non-clustered servers
  #    operator will start it if the policy is not NEVER.
  # For clustered servers
  #     operator will start it the policy is ALWAYS or IF_NEEDED
  # "NEVER"
  #   None of the Servers in the Domain will be started (domain/cluster)
  # "ALWAYS"
  #   All the servers in cluster will be started irrespective of replica counts
  # "IF_NEEDED"
  #   All the servers upto replica count will be started

  serverStartPolicy: IF_NEEDED
  adminServer:
   env:
   - name: JAVA_OPTIONS
     value: "%JAVA_OPTIONS%"
   - name: USER_MEM_ARGS
     value: "-Xms64m -Xmx256m "
   # Uncomment to export the T3Channel as a service
   %EXPOSE_ADMIN_PORT_PREFIX%nodePort: %ADMIN_NODE_PORT%
   %EXPOSE_T3_CHANNEL_PREFIX%exportedNetworkAccessPoints:
   %EXPOSE_T3_CHANNEL_PREFIX%  T3Channel: {}

  clusters:
   - clusterName: "%CLUSTER_NAME%"
   # The number of managed servers to start from clusters
   # default ( if not provided ) is 0
     replicas: %INITIAL_MANAGED_SERVER_REPLICAS%
     env:
     - name: JAVA_OPTIONS
       value: "%JAVA_OPTIONS%"
     - name: USER_MEM_ARGS
       value: "-Xms64m -Xmx256m "
  

