<!-- Copyright 2017, Oracle Corporation. All Rights Reserved. -->
<!-- This is unreleased proprietary source code of Oracle Corporation -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
  
    <groupId>oracle.kubernetes</groupId>
    <artifactId>weblogic-kubernetes-operator</artifactId>
    <version>0.1.0</version>

  <modules>
    <module>model</module>
    <module>operator</module>
    <module>swagger</module>
  </modules>

  <scm>
    <connection>scm:git:git@github.com:oracle/weblogic-kubernetes-operator.git</connection>
    <developerConnection>scm:git:git@github.com:oracle/weblogic-kubernetes-operator.git</developerConnection>
    <url>https://github.com/oracle/weblogic-kubernetes-operator</url>
    <tag>HEAD</tag>
  </scm>

  <prerequisites>
    <maven>2.2.0</maven>
  </prerequisites>

    <description>Oracle Weblogic Server Kubernetes Operator</description>
    <name>weblogic-kubernetes-operator</name>
    <packaging>pom</packaging>

    <url>https://oracle.github.io/weblogic-kubernetes-operator</url>
    <inceptionYear>2017</inceptionYear>
    <licenses>
      <license>
        <name>The Universal Permissive License (UPL), Version 1.0</name>
        <url>https://github.com/oracle/weblogic-kubernetes-operator/blob/master/LICENSE</url>
      </license>
    </licenses>

    <repositories>
        <repository>
            <id>oss-sonatype</id>
            <name>oss-sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/releases/</url>
            <!-- For if we need to work with kubernetes-client/java snapshot releases
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            -->
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>sign-artifacts</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>integration-tests</id>
            <properties>
                <src-integration-test>${project.basedir}/src/integration-test/java</src-integration-test>
                <skip.unit.tests>true</skip.unit.tests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${src-integration-test}</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.20.1</version>
                        <configuration> <!-- run tests in parallel -->
                            <encoding>UTF-8</encoding>
                            <argLine>${failsafeArgLine}</argLine>
                            <failIfNoTests>false</failIfNoTests>
                            <systemPropertyVariables>
                                <!-- Add any system properties here -->
                                <!--<project.build.directory>${project.build.directory}</project.build.directory>-->
                                <!--<weblogic.operator.root.directory>${basedir}/..</weblogic.operator.root.directory>-->
                                <!--<TAGS>${env.TAGS}</TAGS>-->
                                <maxThreads>3</maxThreads>
                            </systemPropertyVariables>
                        </configuration>

                        <executions>
                            <execution>
                                <id>acceptance-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <!-- do not run unit or integration tests -->
                                    <excludes>
                                        <exclude>**/*Test.java</exclude>
                                        <exclude>**/*IT.java</exclude>
                                    </excludes>
                                    <!-- just run acceptance tests -->
                                    <includes>
                                        <include>**/*AT.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>build-sonar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>

                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>

                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${jacoco.outputDir}</outputDirectory>
                                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                </configuration>
                            </execution>

                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.itReportPath}</destFile>
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report-integration</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                                    <outputDirectory>$jacoco.itOutputDir}</outputDirectory>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <surefireArgLine></surefireArgLine>
                <failsafeArgLine></failsafeArgLine>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>

        <!-- HTTP client: jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <!-- Grizzly & jersey server side code -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.9.2</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.11</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>1.9.11</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.kubernetes</groupId>
            <artifactId>client-java</artifactId>
            <version>1.0.0-beta3</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>22.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>        
        <!--  not included with jdk 9 -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- test dependencies -->
        <dependency>
            <!-- note: need to include this before junit since junit includes an obsolete version of hamcrest -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-junit</artifactId>
            <version>2.0.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.httpunit</groupId>
            <artifactId>httpunit</artifactId>
            <version>1.7.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.meterware.simplestub</groupId>
            <artifactId>simplestub</artifactId>
            <version>1.2.9</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <swagger-core-version>1.5.15</swagger-core-version>
        <gson-version>2.6.2</gson-version>
        <jodatime-version>2.9.3</jodatime-version>
        <maven-plugin-version>1.0.0</maven-plugin-version>
        <junit-version>4.12</junit-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jersey-version>2.26</jersey-version> <!-- switched from 2.23 to 2.26 to get the RestServer to work -->
        <jackson-version>2.9.2</jackson-version>
        <root-generated-swagger>${project.basedir}/src-generated-swagger</root-generated-swagger>
        <src-generated-swagger>${root-generated-swagger}/main/java</src-generated-swagger>
        <domain-swagger-file>${project.basedir}/swagger/domain.json</domain-swagger-file>
        <skip.unit.tests>false</skip.unit.tests>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <jacoco.version>0.7.9</jacoco.version>
        <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
        <jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>
        <jacoco.itOutputDir>${project.build.directory}/jacoco-it</jacoco.itOutputDir>
        <jacoco.destFile>${project.build.directory}/jacoco.exec</jacoco.destFile>
        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <jacoco.skip>false</jacoco.skip>
    </properties>

</project>
