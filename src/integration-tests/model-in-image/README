Copyright (c) 2020, Oracle Corporation and/or its affiliates.
Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

--------
SUMMARY:
--------

This is a stand alone test for running the mii-sample in
'kubernetes/samples/scripts/create-weblogic-domain/model-in-image'.

This is _also_- used to generate the sample domain resources and
ingresses that are checked into the sample.

To run the test:

   Usage:
     ./run-test.sh -?

   WLS mode - all 5 tests (initial, update1, update2, update3, update4):
     ./run-test.sh -precleanup -oper -traefik -all

   WLS mode 'init' step only:
     ./run-test.sh -precleanup -oper -traefik -initial-image -initial-main
        -or-
     ./run-test.sh -precleanup
     ./run-test.sh -oper
     ./run-test.sh -traefik 
     ./run-test.sh -initial-image
     ./run-test.sh -initial-main

   JRF mode - all 5 tests (initial, update1, update2, update3, update4):
     ./run-test.sh -precleanup -oper -traefik -precleandb -jrf -db -rcu -all

--------------------
SAMPLE REGENERATION:
--------------------

If you want to change the ingresses or domain resources in the sample,
then keep in mind that these are generated files. To modify them:

# (1) modify the following as needed:
#  ./mii-sample-wrapper/mii-domain.yaml.template-JRF
#  ./mii-sample-wrapper/mii-domain.yaml.template-WLS
#  ./mii-sample-wrapper/stage-and-create-ingresses.sh

# (2) generate the new git sample source
cd ./mii-sample-wrapper
rm -fr /tmp/mii-sample   # deletes default output location for the following command
./generate-sample-doc.sh # generates sample, expect 'mismatch' failures due to mismatch with existing git source

# (3) copy over changes in generated files to the git sample source:
cp /tmp/mii-sample/ingresses/*.yaml ../../../../kubernetes/samples/scripts/create-weblogic-domain/model-in-image/ingresses
cp /tmp/mii-sample/domain-resources/JRF/*.yaml ../../../../kubernetes/samples/scripts/create-weblogic-domain/model-in-image/domain-resources/JRF
cp /tmp/mii-sample/domain-resources/WLS/*.yaml ../../../../kubernetes/samples/scripts/create-weblogic-domain/model-in-image/domain-resources/WLS

# (4) verify the changes copied over correctly
rm -fr /tmp/mii-sample
./generate-sample-doc.sh # expect pass this time

# (5) run the sample test to make sure the modifications are fine

# (6) git add/commit/push the changed domain resource and/or ingress YAML files


------
NOTES:
------

- The order of the parameters doesn't matter.

- To customize the location of output, etc, 
  see the customizable env vars described by
  './run-test.sh -?'.

- The '-precleanup' option:
  - Calls 'cleanup.sh' before doing anything else, 
    which deletes almost everything in your k8s cluster.
  - Deletes the current WORKDIR before proceeding.

- The '-db' option will cause the test to deploy Oracle DB,
  '-oper' builds/deploys the operator, and '-traefik' deploys
  traefik. It is not necessary to use these options if the 
  corresponding service is already running:

  - Make sure operator is monitoring DOMAIN_NAMESPACE.
  - Make sure Oracle DB is running in DB_NAMESPACE and 
    can be reached by the URLs and credentials defined
    in the sample's secrets.
  - Make sure traefik is running with node port 
    TRAEFIK_HTTP_NODEPORT (default 30305), in namespace
    TRAEFIK_NAMESPACE. If TRAEFIK_HTTP_NODEPORT is set
    to 0 that's fine, the test will dynamically find
    the actual nodeport.

- Do not call '-rcu' if the database is already RCU initialized.

- The '-all' options runs the tests "-check-sample", "-initial-image",
  "-initial-main", "-update1", "-update2", and 
  "-update3-image", "-update3-main", and "-update4". 

- You can run the test in stages. For example:
  ./run-test.sh -precleanup 
  ./run-test.sh -oper
  ./run-test.sh -traefik
  ./run-test.sh -initial-image
  ./run-test.sh -initial-main

- If you are not running Kubernetes locally on a single machine,
  then you will need to

  (a) Set image pull env vars and deploy image pull secrets
      before calling the test (see ./run-test.sh -? for
      env vars). Remember to set the image name env var
      with registry location.

  (b) Run the test in stages instead of all at once
      so that you can push the images generated by "-initial-image" 
      and "-update3-image" before proceeding to test the next stage.
